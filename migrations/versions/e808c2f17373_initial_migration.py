"""Initial migration

Revision ID: e808c2f17373
Revises: 38800f419865
Create Date: 2022-04-26 18:30:52.539821

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e808c2f17373'
down_revision = '38800f419865'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'audits',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('auditor', sa.String(), nullable=True),
        sa.Column('reports', postgresql.ARRAY(sa.Integer()), nullable=True),
        sa.Column('start_date', sa.Date(), nullable=True),
        sa.Column('estimated_remediation_date', sa.Date(), nullable=True),
        sa.Column('remediation_date', sa.Date(), nullable=True),
        sa.Column('estimated_end_date', sa.Date(), nullable=True),
        sa.Column('end_date', sa.Date(), nullable=True),
        sa.Column('phase', sa.Enum('scoping_and_validation', 'policy_and_procedure_review', 'audit', 'remediation', 'qa_review', 'project_close_out', 'billing_and_marketing', 'archived', name='phase'), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'compliance_tasks',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('frequency', sa.Enum('weekly', 'monthly', 'quarterly', 'semiannually', 'annually', name='frequency'), nullable=False),
        sa.Column('text', sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'compliances',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('user_id', sa.String(), nullable=False),
        sa.Column('tasks', postgresql.ARRAY(sa.Integer()), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=False),
        sa.Column('plan', sa.Enum('bronze', 'silver', 'gold', 'platinum', name='plan'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'details',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('code', sa.String(), nullable=False),
        sa.Column('compliant_until', sa.Date(), nullable=True),
        sa.Column('timestamp', sa.TIMESTAMP(), nullable=False),
        sa.Column('timezone', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'reports',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'audits_history',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('audit_id', postgresql.UUID(), nullable=True),
        sa.Column('auditor', sa.String(), nullable=True),
        sa.Column('reports', postgresql.ARRAY(sa.Integer()), nullable=True),
        sa.Column('start_date', sa.Date(), nullable=True),
        sa.Column('estimated_remediation_date', sa.Date(), nullable=True),
        sa.Column('remediation_date', sa.Date(), nullable=True),
        sa.Column('estimated_end_date', sa.Date(), nullable=True),
        sa.Column('end_date', sa.Date(), nullable=True),
        sa.Column('phase', sa.Enum('scoping_and_validation', 'policy_and_procedure_review', 'audit', 'remediation', 'qa_review', 'project_close_out', 'billing_and_marketing', 'archived', name='phase'), nullable=True),
        sa.ForeignKeyConstraint(['audit_id'], ['audits.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'audits_timeline',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('audit_id', postgresql.UUID(), nullable=True),
        sa.Column('date', sa.Date(), nullable=True),
        sa.Column('compliant', sa.Integer(), nullable=False),
        sa.Column('notice', sa.Integer(), nullable=False),
        sa.Column('noncompliant', sa.Integer(), nullable=False),
        sa.Column('pending', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['audit_id'], ['audits.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'compliance_periods',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('compliance_id', postgresql.UUID(), nullable=False),
        sa.Column('task_id', postgresql.UUID(), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(['compliance_id'], ['compliances.id']),
        sa.ForeignKeyConstraint(['task_id'], ['compliance_tasks.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'compliances_history',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('compliance_id', postgresql.UUID(), nullable=False),
        sa.Column('tasks', postgresql.ARRAY(sa.Integer()), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=False),
        sa.Column('plan', sa.Enum('bronze', 'silver', 'gold', 'platinum', name='plan'), nullable=False),
        sa.ForeignKeyConstraint(['compliance_id'], ['compliances.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'compliances_timeline',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('compliance_id', postgresql.UUID(), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column('pending', sa.Integer(), nullable=False),
        sa.Column('passed', sa.Integer(), nullable=False),
        sa.Column('failed', sa.Integer(), nullable=False),
        sa.Column('remediation', sa.Integer(), nullable=False),
        sa.Column('overdue', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['compliance_id'], ['compliances.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'report_versions',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('component', sa.String(), nullable=False),
        sa.Column('template', sa.String(), nullable=True),
        sa.Column('processor', sa.String(), nullable=True),
        sa.Column('mapped', sa.Boolean(), nullable=False),
        sa.Column('compliance_only', sa.Boolean(), nullable=False),
        sa.Column('compliance_options', postgresql.ARRAY(sa.Enum('pending', 'in_place', 'in_place_with_ccw', 'not_applicable', 'not_tested', 'not_in_place', 'satisfactory', 'other_than_satisfactory', name='compliance')), nullable=False),
        sa.Column('highest_priority', sa.Integer(), nullable=False),
        sa.Column('tag_options', postgresql.ARRAY(sa.Enum('technical', 'documentation', 'interview', name='tag')), nullable=False),
        sa.Column('default_navigation', sa.Integer(), nullable=True),
        sa.Column('section_regex', sa.String(), nullable=True),
        sa.Column('column_mapping', postgresql.ARRAY(sa.Integer(), dimensions=2), nullable=False),
        sa.Column('tlc_header', sa.String(), nullable=True),
        sa.Column('tlc_position', sa.Integer(), nullable=True),
        sa.Column('report_id', postgresql.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['report_id'], ['reports.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'summary_notes',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('audit_id', postgresql.UUID(), nullable=True),
        sa.Column('compliance_id', postgresql.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['audit_id'], ['audits.id']),
        sa.ForeignKeyConstraint(['compliance_id'], ['compliances.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'compliance_responses',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('compliance_id', postgresql.UUID(), nullable=False),
        sa.Column('period_id', postgresql.UUID(), nullable=False),
        sa.Column('phase', sa.Enum('gathering', 'review', 'verification', 'finalized', name='phase'), nullable=False),
        sa.Column('status', sa.Enum('pending', 'passed', 'failed', 'remediation', name='status'), nullable=False),
        sa.ForeignKeyConstraint(['compliance_id'], ['compliances.id']),
        sa.ForeignKeyConstraint(['period_id'], ['compliance_periods.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'report_nodes',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('text', sa.String(), nullable=True),
        sa.Column('number', sa.String(), nullable=True),
        sa.Column('row', sa.Integer(), nullable=True),
        sa.Column('table', sa.Integer(), nullable=True),
        sa.Column('parent_id', postgresql.UUID(), nullable=True),
        sa.Column('version_id', postgresql.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['parent_id'], ['report_nodes.id']),
        sa.ForeignKeyConstraint(['version_id'], ['report_versions.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'uploads',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('audit_id', postgresql.UUID(), nullable=True),
        sa.Column('compliance_id', postgresql.UUID(), nullable=True),
        sa.Column('compliance_period_id', postgresql.UUID(), nullable=True),
        sa.Column('timestamp', sa.TIMESTAMP(), nullable=False),
        sa.Column('audit_evidence', sa.Boolean(), nullable=True),
        sa.Column('uuid', sa.String(), nullable=False),
        sa.ForeignKeyConstraint(['audit_id'], ['audits.id']),
        sa.ForeignKeyConstraint(['compliance_id'], ['compliances.id']),
        sa.ForeignKeyConstraint(['compliance_period_id'], ['compliance_periods.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'compliance_responses_history',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('compliance_response_id', postgresql.UUID(), nullable=False),
        sa.Column('compliance_id', postgresql.UUID(), nullable=False),
        sa.Column('period_id', postgresql.UUID(), nullable=False),
        sa.Column('phase', sa.Enum('gathering', 'review', 'verification', 'finalized', name='phase'), nullable=False),
        sa.Column('status', sa.Enum('pending', 'passed', 'failed', 'remediation', name='status'), nullable=False),
        sa.ForeignKeyConstraint(['compliance_id'], ['compliances.id']),
        sa.ForeignKeyConstraint(['compliance_response_id'], ['compliance_responses.id']),
        sa.ForeignKeyConstraint(['period_id'], ['compliance_periods.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'report_instructions',
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('text', sa.String(), nullable=True),
        sa.Column('number', sa.String(), nullable=True),
        sa.Column('priority', sa.Integer(), nullable=True),
        sa.Column('tag', sa.Enum('technical', 'documentation', 'interview', name='tag'), nullable=True),
        sa.Column('mappings', postgresql.ARRAY(sa.Integer()), nullable=False),
        sa.Column('notice', sa.Boolean(), nullable=True),
        sa.Column('hidden', sa.Boolean(), nullable=True),
        sa.Column('row', sa.Integer(), nullable=True),
        sa.Column('table', sa.Integer(), nullable=True),
        sa.Column('version_id', postgresql.UUID(), nullable=True),
        sa.Column('node_id', postgresql.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['node_id'], ['report_nodes.id']),
        sa.ForeignKeyConstraint(['version_id'], ['report_versions.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'audit_responses',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('audit_id', postgresql.UUID(), nullable=False),
        sa.Column('instruction_id', postgresql.UUID(), nullable=False),
        sa.Column('compliance', sa.Enum('pending', 'in_place', 'in_place_with_ccw', 'not_applicable', 'not_tested', 'not_in_place', 'satisfactory', 'other_than_satisfactory', name='compliance'), nullable=False),
        sa.ForeignKeyConstraint(['audit_id'], ['audits.id']),
        sa.ForeignKeyConstraint(['instruction_id'], ['report_instructions.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'comments',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('audit_id', postgresql.UUID(), nullable=True),
        sa.Column('audit_instruction_id', postgresql.UUID(), nullable=True),
        sa.Column('compliance_id', postgresql.UUID(), nullable=True),
        sa.Column('compliance_period_id', postgresql.UUID(), nullable=True),
        sa.Column('timestamp', sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(['audit_id'], ['audits.id']),
        sa.ForeignKeyConstraint(['audit_instruction_id'], ['report_instructions.id']),
        sa.ForeignKeyConstraint(['compliance_id'], ['compliances.id']),
        sa.ForeignKeyConstraint(['compliance_period_id'], ['compliance_periods.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'events',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('audit_id', postgresql.UUID(), nullable=True),
        sa.Column('audit_instruction_id', postgresql.UUID(), nullable=True),
        sa.Column('compliance_id', postgresql.UUID(), nullable=True),
        sa.Column('compliance_period_id', postgresql.UUID(), nullable=True),
        sa.Column('timestamp', sa.TIMESTAMP(), nullable=False),
        sa.Column('type', sa.Enum('custom', 'create', 'update', 'delete', name='type'), nullable=False),
        sa.Column('visibility', sa.Enum('common', 'internal', 'external', name='visibility'), nullable=False),
        sa.ForeignKeyConstraint(['audit_id'], ['audits.id']),
        sa.ForeignKeyConstraint(['audit_instruction_id'], ['report_instructions.id']),
        sa.ForeignKeyConstraint(['compliance_id'], ['compliances.id']),
        sa.ForeignKeyConstraint(['compliance_period_id'], ['compliance_periods.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'journals',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('audit_id', postgresql.UUID(), nullable=True),
        sa.Column('audit_instruction_id', postgresql.UUID(), nullable=True),
        sa.Column('compliance_id', postgresql.UUID(), nullable=True),
        sa.Column('compliance_period_id', postgresql.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['audit_id'], ['audits.id']),
        sa.ForeignKeyConstraint(['audit_instruction_id'], ['report_instructions.id']),
        sa.ForeignKeyConstraint(['compliance_id'], ['compliances.id']),
        sa.ForeignKeyConstraint(['compliance_period_id'], ['compliance_periods.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'audit_responses_history',
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('description', sa.String(), nullable=True),
        sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('tenant_id', sa.String(), nullable=False),
        sa.Column('created_by', sa.String(), nullable=True),
        sa.Column('created_on', sa.DateTime(), nullable=True),
        sa.Column('changed_by', sa.String(), nullable=True),
        sa.Column('changed_on', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('audit_response_id', postgresql.UUID(), nullable=True),
        sa.Column('audit_id', postgresql.UUID(), nullable=False),
        sa.Column('instruction_id', postgresql.UUID(), nullable=False),
        sa.Column('compliance', sa.Enum('pending', 'in_place', 'in_place_with_ccw', 'not_applicable', 'not_tested', 'not_in_place', 'satisfactory', 'other_than_satisfactory', name='compliance'), nullable=False),
        sa.ForeignKeyConstraint(['audit_id'], ['audits.id']),
        sa.ForeignKeyConstraint(['audit_response_id'], ['audit_responses.id']),
        sa.ForeignKeyConstraint(['instruction_id'], ['report_instructions.id']),
        sa.PrimaryKeyConstraint('id'),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('audit_responses_history')
    op.drop_table('journals')
    op.drop_table('events')
    op.drop_table('comments')
    op.drop_table('audit_responses')
    op.drop_table('report_instructions')
    op.drop_table('compliance_responses_history')
    op.drop_table('uploads')
    op.drop_table('report_nodes')
    op.drop_table('compliance_responses')
    op.drop_table('summary_notes')
    op.drop_table('report_versions')
    op.drop_table('compliances_timeline')
    op.drop_table('compliances_history')
    op.drop_table('compliance_periods')
    op.drop_table('audits_timeline')
    op.drop_table('audits_history')
    op.drop_table('reports')
    op.drop_table('details')
    op.drop_table('compliances')
    op.drop_table('compliance_tasks')
    op.drop_table('audits')
    # ### end Alembic commands ###
